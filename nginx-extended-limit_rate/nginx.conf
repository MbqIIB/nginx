worker_processes  auto;

error_log  logs/error.log warn;
pid        logs/nginx.pid;

events {
    worker_connections  8192; 
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;

    keepalive_timeout  3;

    lua_shared_dict ips_limit 10m;

    init_by_lua_block {
        ips_limit = ngx.shared.ips_limit
    }


server {
    listen 80 ; 

    access_log /dev/null ;

    set $rate 5;    # number of requests within $expire seconds  
    set $expire 5;  # expiration time, in seconds 

    location / {

      access_by_lua_block {
        local ip = ngx.var.remote_addr
        local expire = tonumber(ngx.var.expire)
        local rate = tonumber(ngx.var.rate)
        local lim, flags = ips_limit:get(ip)
        if not lim then
          ips_limit:set(ip, 1, expire)
          return
        elseif lim < rate then
          ips_limit:incr(ip,1)
        else
          ngx.exit(ngx.HTTP_FORBIDDEN)
        end
      }


    }


}

}
